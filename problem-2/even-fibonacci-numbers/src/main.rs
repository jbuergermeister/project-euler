/*
Problem 2
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
*/

const MAX_VAL: usize = 4_000_000;
fn main() {
    let sequence_start = vec![1, 2];
    let sequence = fibonacci_generator(sequence_start);
    println!("{sequence:?}");
    let sum: usize = sequence.into_iter().filter(|x| x % 2 == 0).sum();
    println!("{sum:?}");
}

fn fibonacci_generator(sequence_vector: Vec<usize>) -> Vec<usize> {
    let a = sequence_vector[sequence_vector.len()-1];
    let b = sequence_vector[sequence_vector.len()-2];
    let c = a + b;
    if c > MAX_VAL {
        sequence_vector
    } else {
        let mut result = sequence_vector;
        result.push(c);
        fibonacci_generator(result)
    }
}